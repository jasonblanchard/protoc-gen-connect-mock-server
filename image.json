{"file":[{"name":"google/protobuf/duration.proto","package":"google.protobuf","messageType":[{"name":"Duration","field":[{"name":"seconds","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"seconds"},{"name":"nanos","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"nanos"}]}],"options":{"javaPackage":"com.google.protobuf","javaOuterClassname":"DurationProto","javaMultipleFiles":true,"goPackage":"google.golang.org/protobuf/types/known/durationpb","ccEnableArenas":true,"objcClassPrefix":"GPB","csharpNamespace":"Google.Protobuf.WellKnownTypes"},"sourceCodeInfo":{"location":[{"span":[30,0,114,1]},{"path":[12],"span":[30,0,18],"leadingDetachedComments":[" Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"]},{"path":[2],"span":[32,0,24]},{"path":[8],"span":[34,0,31]},{"path":[8,31],"span":[34,0,31]},{"path":[8],"span":[35,0,72]},{"path":[8,11],"span":[35,0,72]},{"path":[8],"span":[36,0,44]},{"path":[8,1],"span":[36,0,44]},{"path":[8],"span":[37,0,46]},{"path":[8,8],"span":[37,0,46]},{"path":[8],"span":[38,0,34]},{"path":[8,10],"span":[38,0,34]},{"path":[8],"span":[39,0,33]},{"path":[8,36],"span":[39,0,33]},{"path":[8],"span":[40,0,59]},{"path":[8,37],"span":[40,0,59]},{"path":[4,0],"span":[101,0,114,1],"leadingComments":" A Duration represents a signed, fixed-length span of time represented\n as a count of seconds and fractions of seconds at nanosecond\n resolution. It is independent of any calendar and concepts like \"day\"\n or \"month\". It is related to Timestamp in that the difference between\n two Timestamp values is a Duration and it can be added or subtracted\n from a Timestamp. Range is approximately +-10,000 years.\n\n # Examples\n\n Example 1: Compute Duration from two Timestamps in pseudo code.\n\n     Timestamp start = ...;\n     Timestamp end = ...;\n     Duration duration = ...;\n\n     duration.seconds = end.seconds - start.seconds;\n     duration.nanos = end.nanos - start.nanos;\n\n     if (duration.seconds < 0 && duration.nanos > 0) {\n       duration.seconds += 1;\n       duration.nanos -= 1000000000;\n     } else if (duration.seconds > 0 && duration.nanos < 0) {\n       duration.seconds -= 1;\n       duration.nanos += 1000000000;\n     }\n\n Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n\n     Timestamp start = ...;\n     Duration duration = ...;\n     Timestamp end = ...;\n\n     end.seconds = start.seconds + duration.seconds;\n     end.nanos = start.nanos + duration.nanos;\n\n     if (end.nanos < 0) {\n       end.seconds -= 1;\n       end.nanos += 1000000000;\n     } else if (end.nanos >= 1000000000) {\n       end.seconds += 1;\n       end.nanos -= 1000000000;\n     }\n\n Example 3: Compute Duration from datetime.timedelta in Python.\n\n     td = datetime.timedelta(days=3, minutes=10)\n     duration = Duration()\n     duration.FromTimedelta(td)\n\n # JSON Mapping\n\n In JSON format, the Duration type is encoded as a string rather than an\n object, where the string ends in the suffix \"s\" (indicating seconds) and\n is preceded by the number of seconds, with nanoseconds expressed as\n fractional seconds. For example, 3 seconds with 0 nanoseconds should be\n encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should\n be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1\n microsecond should be expressed in JSON format as \"3.000001s\".\n\n"},{"path":[4,0,1],"span":[101,8,16]},{"path":[4,0,2,0],"span":[105,2,20],"leadingComments":" Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n"},{"path":[4,0,2,0,5],"span":[105,2,7]},{"path":[4,0,2,0,1],"span":[105,8,15]},{"path":[4,0,2,0,3],"span":[105,18,19]},{"path":[4,0,2,1],"span":[113,2,18],"leadingComments":" Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.\n"},{"path":[4,0,2,1,5],"span":[113,2,7]},{"path":[4,0,2,1,1],"span":[113,8,13]},{"path":[4,0,2,1,3],"span":[113,16,17]}]},"syntax":"proto3","bufExtension":{"isImport":true,"isSyntaxUnspecified":false}},{"name":"google/type/datetime.proto","package":"google.type","dependency":["google/protobuf/duration.proto"],"messageType":[{"name":"DateTime","field":[{"name":"year","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"year"},{"name":"month","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"month"},{"name":"day","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"day"},{"name":"hours","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"hours"},{"name":"minutes","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"minutes"},{"name":"seconds","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"seconds"},{"name":"nanos","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"nanos"},{"name":"utc_offset","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Duration","oneofIndex":0,"jsonName":"utcOffset"},{"name":"time_zone","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.type.TimeZone","oneofIndex":0,"jsonName":"timeZone"}],"oneofDecl":[{"name":"time_offset"}]},{"name":"TimeZone","field":[{"name":"id","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"id"},{"name":"version","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"version"}]}],"options":{"javaPackage":"com.google.type","javaOuterClassname":"DateTimeProto","javaMultipleFiles":true,"goPackage":"google.golang.org/genproto/googleapis/type/datetime;datetime","ccEnableArenas":true,"objcClassPrefix":"GTP"},"sourceCodeInfo":{"location":[{"span":[14,0,103,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2021 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,20]},{"path":[3,0],"span":[18,0,40]},{"path":[8],"span":[20,0,31]},{"path":[8,31],"span":[20,0,31]},{"path":[8],"span":[21,0,83]},{"path":[8,11],"span":[21,0,83]},{"path":[8],"span":[22,0,34]},{"path":[8,10],"span":[22,0,34]},{"path":[8],"span":[23,0,46]},{"path":[8,8],"span":[23,0,46]},{"path":[8],"span":[24,0,40]},{"path":[8,1],"span":[24,0,40]},{"path":[8],"span":[25,0,33]},{"path":[8,36],"span":[25,0,33]},{"path":[4,0],"span":[51,0,93,1],"leadingComments":" Represents civil time (or occasionally physical time).\n\n This type can represent a civil time in one of a few possible ways:\n\n  * When utc_offset is set and time_zone is unset: a civil time on a calendar\n    day with a particular offset from UTC.\n  * When time_zone is set and utc_offset is unset: a civil time on a calendar\n    day in a particular time zone.\n  * When neither time_zone nor utc_offset is set: a civil time on a calendar\n    day in local time.\n\n The date is relative to the Proleptic Gregorian Calendar.\n\n If year is 0, the DateTime is considered not to have a specific year. month\n and day must have valid, non-zero values.\n\n This type may also be used to represent a physical time if all the date and\n time fields are set and either case of the `time_offset` oneof is set.\n Consider using `Timestamp` message for physical time instead. If your use\n case also would like to store the user's timezone, that can be done in\n another field.\n\n This type is more flexible than some applications may want. Make sure to\n document and validate your application's limitations.\n"},{"path":[4,0,1],"span":[51,8,16]},{"path":[4,0,2,0],"span":[54,2,17],"leadingComments":" Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a\n datetime without a year.\n"},{"path":[4,0,2,0,5],"span":[54,2,7]},{"path":[4,0,2,0,1],"span":[54,8,12]},{"path":[4,0,2,0,3],"span":[54,15,16]},{"path":[4,0,2,1],"span":[57,2,18],"leadingComments":" Required. Month of year. Must be from 1 to 12.\n"},{"path":[4,0,2,1,5],"span":[57,2,7]},{"path":[4,0,2,1,1],"span":[57,8,13]},{"path":[4,0,2,1,3],"span":[57,16,17]},{"path":[4,0,2,2],"span":[61,2,16],"leadingComments":" Required. Day of month. Must be from 1 to 31 and valid for the year and\n month.\n"},{"path":[4,0,2,2,5],"span":[61,2,7]},{"path":[4,0,2,2,1],"span":[61,8,11]},{"path":[4,0,2,2,3],"span":[61,14,15]},{"path":[4,0,2,3],"span":[66,2,18],"leadingComments":" Required. Hours of day in 24 hour format. Should be from 0 to 23. An API\n may choose to allow the value \"24:00:00\" for scenarios like business\n closing time.\n"},{"path":[4,0,2,3,5],"span":[66,2,7]},{"path":[4,0,2,3,1],"span":[66,8,13]},{"path":[4,0,2,3,3],"span":[66,16,17]},{"path":[4,0,2,4],"span":[69,2,20],"leadingComments":" Required. Minutes of hour of day. Must be from 0 to 59.\n"},{"path":[4,0,2,4,5],"span":[69,2,7]},{"path":[4,0,2,4,1],"span":[69,8,15]},{"path":[4,0,2,4,3],"span":[69,18,19]},{"path":[4,0,2,5],"span":[73,2,20],"leadingComments":" Required. Seconds of minutes of the time. Must normally be from 0 to 59. An\n API may allow the value 60 if it allows leap-seconds.\n"},{"path":[4,0,2,5,5],"span":[73,2,7]},{"path":[4,0,2,5,1],"span":[73,8,15]},{"path":[4,0,2,5,3],"span":[73,18,19]},{"path":[4,0,2,6],"span":[77,2,18],"leadingComments":" Required. Fractions of seconds in nanoseconds. Must be from 0 to\n 999,999,999.\n"},{"path":[4,0,2,6,5],"span":[77,2,7]},{"path":[4,0,2,6,1],"span":[77,8,13]},{"path":[4,0,2,6,3],"span":[77,16,17]},{"path":[4,0,8,0],"span":[84,2,92,3],"leadingComments":" Optional. Specifies either the UTC offset or the time zone of the DateTime.\n Choose carefully between them, considering that time zone data may change\n in the future (for example, a country modifies their DST start/end dates,\n and future DateTimes in the affected range had already been stored).\n If omitted, the DateTime is considered to be in local time.\n"},{"path":[4,0,8,0,1],"span":[84,8,19]},{"path":[4,0,2,7],"span":[88,4,44],"leadingComments":" UTC offset. Must be whole seconds, between -18 hours and +18 hours.\n For example, a UTC offset of -4:00 would be represented as\n { seconds: -14400 }.\n"},{"path":[4,0,2,7,6],"span":[88,4,28]},{"path":[4,0,2,7,1],"span":[88,29,39]},{"path":[4,0,2,7,3],"span":[88,42,43]},{"path":[4,0,2,8],"span":[91,4,27],"leadingComments":" Time zone.\n"},{"path":[4,0,2,8,6],"span":[91,4,12]},{"path":[4,0,2,8,1],"span":[91,13,22]},{"path":[4,0,2,8,3],"span":[91,25,26]},{"path":[4,1],"span":[97,0,103,1],"leadingComments":" Represents a time zone from the\n [IANA Time Zone Database](https://www.iana.org/time-zones).\n"},{"path":[4,1,1],"span":[97,8,16]},{"path":[4,1,2,0],"span":[99,2,16],"leadingComments":" IANA Time Zone Database time zone, e.g. \"America/New_York\".\n"},{"path":[4,1,2,0,5],"span":[99,2,8]},{"path":[4,1,2,0,1],"span":[99,9,11]},{"path":[4,1,2,0,3],"span":[99,14,15]},{"path":[4,1,2,1],"span":[102,2,21],"leadingComments":" Optional. IANA Time Zone Database version number, e.g. \"2019a\".\n"},{"path":[4,1,2,1,5],"span":[102,2,8]},{"path":[4,1,2,1,1],"span":[102,9,16]},{"path":[4,1,2,1,3],"span":[102,19,20]}]},"syntax":"proto3","bufExtension":{"isImport":true,"moduleInfo":{"name":{"remote":"buf.build","owner":"googleapis","repository":"googleapis"},"commit":"711e289f6a384c4caeebaff7c6931ade"},"isSyntaxUnspecified":false}},{"name":"examples/greet/v1/greet.proto","package":"greet.v1","dependency":["google/type/datetime.proto"],"messageType":[{"name":"Nested","field":[{"name":"test","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"test"}]},{"name":"GreetRequest","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"}]},{"name":"GreetResponse","field":[{"name":"greeting","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"greeting"},{"name":"nested","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".greet.v1.Nested","jsonName":"nested"},{"name":"thingies","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".greet.v1.Nested","jsonName":"thingies"},{"name":"greetings","number":4,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"greetings"},{"name":"bool_kind","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"boolKind"},{"name":"int32_kind","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"int32Kind"},{"name":"sint32_kind","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_SINT32","jsonName":"sint32Kind"},{"name":"bytes_kind","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"bytesKind"},{"name":"float_kind","number":10,"label":"LABEL_OPTIONAL","type":"TYPE_FLOAT","jsonName":"floatKind"},{"name":"status","number":11,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".greet.v1.Status","jsonName":"status"},{"name":"created_at","number":12,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.type.DateTime","jsonName":"createdAt"}]},{"name":"StatusRequest"},{"name":"StatusResponse","field":[{"name":"status","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".greet.v1.Status","jsonName":"status"}]}],"enumType":[{"name":"Status","value":[{"name":"STATUS_UNSPECIFIED","number":0},{"name":"STATUS_OK","number":1},{"name":"STATUS_NOT_OK","number":2}]}],"service":[{"name":"GreetService","method":[{"name":"Greet","inputType":".greet.v1.GreetRequest","outputType":".greet.v1.GreetResponse","options":{}}]},{"name":"StatusService","method":[{"name":"Status","inputType":".greet.v1.StatusRequest","outputType":".greet.v1.StatusResponse","options":{}}]}],"sourceCodeInfo":{"location":[{"span":[0,0,46,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,17]},{"path":[3,0],"span":[4,0,36]},{"path":[4,0],"span":[6,0,8,1]},{"path":[4,0,1],"span":[6,8,14]},{"path":[4,0,2,0],"span":[7,2,18]},{"path":[4,0,2,0,5],"span":[7,2,8]},{"path":[4,0,2,0,1],"span":[7,9,13]},{"path":[4,0,2,0,3],"span":[7,16,17]},{"path":[4,1],"span":[10,0,12,1]},{"path":[4,1,1],"span":[10,8,20]},{"path":[4,1,2,0],"span":[11,2,18]},{"path":[4,1,2,0,5],"span":[11,2,8]},{"path":[4,1,2,0,1],"span":[11,9,13]},{"path":[4,1,2,0,3],"span":[11,16,17]},{"path":[4,2],"span":[14,0,26,1]},{"path":[4,2,1],"span":[14,8,21]},{"path":[4,2,2,0],"span":[15,2,22]},{"path":[4,2,2,0,5],"span":[15,2,8]},{"path":[4,2,2,0,1],"span":[15,9,17]},{"path":[4,2,2,0,3],"span":[15,20,21]},{"path":[4,2,2,1],"span":[16,2,20]},{"path":[4,2,2,1,6],"span":[16,2,8]},{"path":[4,2,2,1,1],"span":[16,9,15]},{"path":[4,2,2,1,3],"span":[16,18,19]},{"path":[4,2,2,2],"span":[17,2,31]},{"path":[4,2,2,2,4],"span":[17,2,10]},{"path":[4,2,2,2,6],"span":[17,11,17]},{"path":[4,2,2,2,1],"span":[17,18,26]},{"path":[4,2,2,2,3],"span":[17,29,30]},{"path":[4,2,2,3],"span":[18,2,32]},{"path":[4,2,2,3,4],"span":[18,2,10]},{"path":[4,2,2,3,5],"span":[18,11,17]},{"path":[4,2,2,3,1],"span":[18,18,27]},{"path":[4,2,2,3,3],"span":[18,30,31]},{"path":[4,2,2,4],"span":[19,2,21]},{"path":[4,2,2,4,5],"span":[19,2,6]},{"path":[4,2,2,4,1],"span":[19,7,16]},{"path":[4,2,2,4,3],"span":[19,19,20]},{"path":[4,2,2,5],"span":[20,2,23]},{"path":[4,2,2,5,5],"span":[20,2,7]},{"path":[4,2,2,5,1],"span":[20,8,18]},{"path":[4,2,2,5,3],"span":[20,21,22]},{"path":[4,2,2,6],"span":[21,2,25]},{"path":[4,2,2,6,5],"span":[21,2,8]},{"path":[4,2,2,6,1],"span":[21,9,20]},{"path":[4,2,2,6,3],"span":[21,23,24]},{"path":[4,2,2,7],"span":[22,2,23]},{"path":[4,2,2,7,5],"span":[22,2,7]},{"path":[4,2,2,7,1],"span":[22,8,18]},{"path":[4,2,2,7,3],"span":[22,21,22]},{"path":[4,2,2,8],"span":[23,2,24]},{"path":[4,2,2,8,5],"span":[23,2,7]},{"path":[4,2,2,8,1],"span":[23,8,18]},{"path":[4,2,2,8,3],"span":[23,21,23]},{"path":[4,2,2,9],"span":[24,2,21]},{"path":[4,2,2,9,6],"span":[24,2,8]},{"path":[4,2,2,9,1],"span":[24,9,15]},{"path":[4,2,2,9,3],"span":[24,18,20]},{"path":[4,2,2,10],"span":[25,2,39]},{"path":[4,2,2,10,6],"span":[25,2,22]},{"path":[4,2,2,10,1],"span":[25,23,33]},{"path":[4,2,2,10,3],"span":[25,36,38]},{"path":[6,0],"span":[28,0,30,1]},{"path":[6,0,1],"span":[28,8,20]},{"path":[6,0,2,0],"span":[29,2,52]},{"path":[6,0,2,0,1],"span":[29,6,11]},{"path":[6,0,2,0,2],"span":[29,12,24]},{"path":[6,0,2,0,3],"span":[29,35,48]},{"path":[5,0],"span":[32,0,36,1]},{"path":[5,0,1],"span":[32,5,11]},{"path":[5,0,2,0],"span":[33,2,25]},{"path":[5,0,2,0,1],"span":[33,2,20]},{"path":[5,0,2,0,2],"span":[33,23,24]},{"path":[5,0,2,1],"span":[34,2,16]},{"path":[5,0,2,1,1],"span":[34,2,11]},{"path":[5,0,2,1,2],"span":[34,14,15]},{"path":[5,0,2,2],"span":[35,2,20]},{"path":[5,0,2,2,1],"span":[35,2,15]},{"path":[5,0,2,2,2],"span":[35,18,19]},{"path":[4,3],"span":[38,0,24]},{"path":[4,3,1],"span":[38,8,21]},{"path":[4,4],"span":[40,0,42,1]},{"path":[4,4,1],"span":[40,8,22]},{"path":[4,4,2,0],"span":[41,2,20]},{"path":[4,4,2,0,6],"span":[41,2,8]},{"path":[4,4,2,0,1],"span":[41,9,15]},{"path":[4,4,2,0,3],"span":[41,18,19]},{"path":[6,1],"span":[44,0,46,1]},{"path":[6,1,1],"span":[44,8,21]},{"path":[6,1,2,0],"span":[45,2,55]},{"path":[6,1,2,0,1],"span":[45,6,12]},{"path":[6,1,2,0,2],"span":[45,13,26]},{"path":[6,1,2,0,3],"span":[45,37,51]}]},"syntax":"proto3","bufExtension":{"isImport":false,"isSyntaxUnspecified":false}}]}